{"ast":null,"code":"import { FETCH_BOOKS_LOADING, FETCH_BOOKS_SUCCESS, FETCH_BOOKS_ERROR } from '../constants';\nconst initialState = {\n  isLoading: false,\n  fetchedBooks: [],\n  error: ''\n};\n\nconst reducerFetchedBooks = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_BOOKS_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case FETCH_BOOKS_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        fetchedBooks: action.payload,\n        error: ''\n      };\n\n    case FETCH_BOOKS_ERROR:\n      return { ...state,\n        isLoading: false,\n        fetchedBooks: [],\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerFetchedBooks;","map":{"version":3,"sources":["C:/wamp64/www/books/src/redux/reducers/reducerFetchBooks.js"],"names":["FETCH_BOOKS_LOADING","FETCH_BOOKS_SUCCESS","FETCH_BOOKS_ERROR","initialState","isLoading","fetchedBooks","error","reducerFetchedBooks","state","action","type","payload"],"mappings":"AAAA,SACIA,mBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,QAIM,cAJN;AAMA,MAAMC,YAAY,GAAC;AACfC,EAAAA,SAAS,EAAC,KADK;AAEfC,EAAAA,YAAY,EAAC,EAFE;AAGfC,EAAAA,KAAK,EAAC;AAHS,CAAnB;;AAMA,MAAMC,mBAAmB,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAvBL,YAAuB;AAAA,MAAVM,MAAU;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,mBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,SAAS,EAAC;AAFP,OAAP;;AAKJ,SAAKH,mBAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFJ,QAAAA,SAAS,EAAC,KAFR;AAGFC,QAAAA,YAAY,EAACI,MAAM,CAACE,OAHlB;AAIFL,QAAAA,KAAK,EAAC;AAJJ,OAAN;;AAOJ,SAAKJ,iBAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFJ,QAAAA,SAAS,EAAC,KAFR;AAGFC,QAAAA,YAAY,EAAC,EAHX;AAIFC,QAAAA,KAAK,EAACG,MAAM,CAACE;AAJX,OAAN;;AAOJ;AAAS,aAAOH,KAAP;AAvBb;AAyBH,CA1BD;;AA4BA,eAAeD,mBAAf","sourcesContent":["import{\r\n    FETCH_BOOKS_LOADING,\r\n    FETCH_BOOKS_SUCCESS,\r\n    FETCH_BOOKS_ERROR\r\n}from '../constants'\r\n\r\nconst initialState={\r\n    isLoading:false,\r\n    fetchedBooks:[],\r\n    error:''\r\n}\r\n\r\nconst reducerFetchedBooks = (state= initialState,action) =>{\r\n    switch(action.type){\r\n        case FETCH_BOOKS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading:true\r\n            }\r\n\r\n        case FETCH_BOOKS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                fetchedBooks:action.payload,\r\n                error:''\r\n            }\r\n\r\n        case FETCH_BOOKS_ERROR:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                fetchedBooks:[],\r\n                error:action.payload\r\n            }\r\n\r\n        default: return state\r\n        }\r\n}\r\n\r\nexport default reducerFetchedBooks"]},"metadata":{},"sourceType":"module"}