{"ast":null,"code":"import { FETCH_BOOKS_LOADING, FETCH_BOOKS_SUCCESS, FETCH_BOOKS_ERROR } from '../constants';\nimport axios from 'axios';\n\nconst fetchBooksLoading = () => {\n  return {\n    type: FETCH_BOOKS_LOADING\n  };\n};\n\nconst fetchBooksSuccess = data => {\n  return {\n    type: FETCH_BOOKS_SUCCESS,\n    payload: data\n  };\n};\n\nconst fetchBooksError = data => {\n  return {\n    type: FETCH_BOOKS_ERROR,\n    payload: error\n  };\n};\n\nconst GOOGLE_API_KEY = 'AIzaSyAlBLIkLDAxoQlDXcW9UXfM6iHYGu6mYo0';\nexport const fetchBooks = title => {\n  return dispatch => {\n    dispatch(fetchBooksLoading());\n    axios.get(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${GOOGLE_API_KEY}&maxResults=20`).then(res => {\n      const bookItemsArray = res.data.items;\n      dispatch(fetchBooksSuccess(bookItemsArray));\n    }).catch(error => {\n      dispatch(fetchBooksError(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["C:/wamp64/www/books/src/redux/actions/actionFetchBooks.js"],"names":["FETCH_BOOKS_LOADING","FETCH_BOOKS_SUCCESS","FETCH_BOOKS_ERROR","axios","fetchBooksLoading","type","fetchBooksSuccess","data","payload","fetchBooksError","error","GOOGLE_API_KEY","fetchBooks","title","dispatch","get","then","res","bookItemsArray","items","catch","message"],"mappings":"AAAA,SACIA,mBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,QAIM,cAJN;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,MAAK;AAC3B,SAAM;AACFC,IAAAA,IAAI,EAACL;AADH,GAAN;AAGH,CAJD;;AAMA,MAAMM,iBAAiB,GAAGC,IAAI,IAAG;AAC7B,SAAM;AACFF,IAAAA,IAAI,EAACJ,mBADH;AAEFO,IAAAA,OAAO,EAACD;AAFN,GAAN;AAIH,CALD;;AAOA,MAAME,eAAe,GAAGF,IAAI,IAAG;AAC3B,SAAM;AACFF,IAAAA,IAAI,EAACH,iBADH;AAEFM,IAAAA,OAAO,EAACE;AAFN,GAAN;AAIH,CALD;;AAOA,MAAMC,cAAc,GAAG,yCAAvB;AAEA,OAAO,MAAMC,UAAU,GAAGC,KAAK,IAAG;AAC9B,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AAEAD,IAAAA,KAAK,CAACY,GAAN,CAAW,iDAAgDF,KAAM,QAAOF,cAAe,gBAAvF,EACCK,IADD,CACOC,GAAG,IAAK;AAEX,YAAMC,cAAc,GAAED,GAAG,CAACV,IAAJ,CAASY,KAA/B;AACAL,MAAAA,QAAQ,CAACR,iBAAiB,CAACY,cAAD,CAAlB,CAAR;AACH,KALD,EAMCE,KAND,CAMQV,KAAK,IAAI;AACbI,MAAAA,QAAQ,CAACL,eAAe,CAACC,KAAK,CAACW,OAAP,CAAhB,CAAR;AACH,KARD;AASH,GAZD;AAaH,CAdM","sourcesContent":["import{\r\n    FETCH_BOOKS_LOADING,\r\n    FETCH_BOOKS_SUCCESS,\r\n    FETCH_BOOKS_ERROR\r\n}from '../constants'\r\n\r\nimport axios from 'axios'\r\n\r\nconst fetchBooksLoading = () =>{\r\n    return{\r\n        type:FETCH_BOOKS_LOADING\r\n    }\r\n}\r\n\r\nconst fetchBooksSuccess = data =>{\r\n    return{\r\n        type:FETCH_BOOKS_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst fetchBooksError = data =>{\r\n    return{\r\n        type:FETCH_BOOKS_ERROR,\r\n        payload:error\r\n    }\r\n}\r\n\r\nconst GOOGLE_API_KEY = 'AIzaSyAlBLIkLDAxoQlDXcW9UXfM6iHYGu6mYo0'\r\n\r\nexport const fetchBooks = title =>{\r\n    return dispatch =>{\r\n        dispatch(fetchBooksLoading())\r\n\r\n        axios.get(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${GOOGLE_API_KEY}&maxResults=20`)\r\n        .then( res  => {\r\n\r\n            const bookItemsArray= res.data.items\r\n            dispatch(fetchBooksSuccess(bookItemsArray))\r\n        })\r\n        .catch( error => {\r\n            dispatch(fetchBooksError(error.message))\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}